"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[835],{1776:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var o=t(7462),r=(t(7294),t(3905));const s={sidebar_position:4},i="Usage with Next.js",d={unversionedId:"introduction/nextjs-usage",id:"introduction/nextjs-usage",title:"Usage with Next.js",description:"react-py is not Server-Side Rendering (SSR) friendly, due to client only APIs such as web workers. To use this package with Next.js, ensure it is loaded on the client side only.",source:"@site/docs/introduction/nextjs-usage.md",sourceDirName:"introduction",slug:"/introduction/nextjs-usage",permalink:"/docs/introduction/nextjs-usage",draft:!1,editUrl:"https://github.com/apprendre-python/apprendre-python.github.io/docs/introduction/nextjs-usage.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4}},a={},p=[{value:"Adding the <code>PythonProvider</code>",id:"adding-the-pythonprovider",level:2},{value:"Using the <code>usePython</code> hook",id:"using-the-usepython-hook",level:2}],u={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.mdx)(c,(0,o.default)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"usage-with-nextjs"},"Usage with Next.js"),(0,r.mdx)("admonition",{type:"info"},(0,r.mdx)("p",{parentName:"admonition"},(0,r.mdx)("inlineCode",{parentName:"p"},"react-py")," is not Server-Side Rendering (SSR) friendly, due to client only APIs such as web workers. To use this package with ",(0,r.mdx)("a",{parentName:"p",href:"https://nextjs.org"},"Next.js"),", ensure it is loaded on the client side only.")),(0,r.mdx)("p",null,"These docs are current as of Next 13. In the future, this will become easier with ",(0,r.mdx)("a",{parentName:"p",href:"https://beta.nextjs.org/docs/rendering/server-and-client-components#client-components"},"Client Components"),"."),(0,r.mdx)("h2",{id:"adding-the-pythonprovider"},"Adding the ",(0,r.mdx)("inlineCode",{parentName:"h2"},"PythonProvider")),(0,r.mdx)("p",null,"The provider needs to be imported dynamically using ",(0,r.mdx)("a",{parentName:"p",href:"https://nextjs.org/docs/advanced-features/dynamic-import"},"Dynamic Import")," without SSR. Add the following to ",(0,r.mdx)("inlineCode",{parentName:"p"},"_app.tsx"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-tsx"},"import type { AppProps } from 'next/app'\n\nimport dynamic from 'next/dynamic'\n\nconst PythonProvider = dynamic(\n  () => import('react-py').then((module) => module.PythonProvider),\n  {\n    ssr: false\n  }\n)\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <PythonProvider>\n      <Component {...pageProps} />\n    </PythonProvider>\n  )\n}\n")),(0,r.mdx)("h2",{id:"using-the-usepython-hook"},"Using the ",(0,r.mdx)("inlineCode",{parentName:"h2"},"usePython")," hook"),(0,r.mdx)("p",null,"Ensure that components using the ",(0,r.mdx)("inlineCode",{parentName:"p"},"usePython")," hook are loaded on the client side only. For example, ",(0,r.mdx)("inlineCode",{parentName:"p"},"index.tsx")," may look like:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-tsx"},"import dynamic from 'next/dynamic'\n\nconst Codeblock = dynamic(() => import('../components/Codeblock'), {\n  ssr: false\n})\n\nexport default function Home() {\n  return <Codeblock />\n}\n")),(0,r.mdx)("p",null,"As long as the component is imported as shown in the previous step, hooks can be used in ",(0,r.mdx)("inlineCode",{parentName:"p"},"components/Codeblock.tsx")," as follows:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-tsx"},"import { useState } from 'react'\nimport { usePython } from 'react-py'\n\nexport default function Codeblock() {\n  const [input, setInput] = useState('')\n\n  // Use the usePython hook to run code and access both stdout and stderr\n  const { runPython, stdout, stderr, isLoading, isRunning } = usePython()\n\n  return (\n    <>\n      {isLoading ? <p>Loading...</p> : <p>Ready!</p>}\n      <form>\n        <textarea\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your code here\"\n        />\n        <input\n          type=\"submit\"\n          value={!isRunning ? 'Run' : 'Running...'}\n          disabled={isLoading || isRunning}\n          onClick={(e) => {\n            e.preventDefault()\n            runPython(input)\n          }}\n        />\n      </form>\n      <p>Output</p>\n      <pre>\n        <code>{stdout}</code>\n      </pre>\n      <p>Error</p>\n      <pre>\n        <code>{stderr}</code>\n      </pre>\n    </>\n  )\n}\n")))}m.isMDXComponent=!0}}]);