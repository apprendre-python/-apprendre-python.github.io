"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[538,918],{8072:(e,a,n)=>{n.r(a),n.d(a,{default:()=>h});var t=n(7294),i=n(1262),o=n(2949),r=n(6816),s=n(4673),l=n(9587),c=n(1451),d=n(6533),p=n(4967),m=n(8573);const u={enableBasicAutocompletion:!0,enableLiveAutocompletion:!0,highlightActiveLine:!1,showPrintMargin:!1},g=e=>{e.renderer.setScrollMargin(10,10,0,0),e.moveCursorTo(0,0)};function h(e){let{init:a,tests:h,solution:f,packages:y}=e;const[k,x]=(0,t.useState)(a),[b,P]=(0,t.useState)(!1),{colorMode:v}=(0,o.useColorMode)(),w=(0,r.usePython)({packages:y}),E=(0,r.usePython)({packages:y});let[N,C]=[-1,"\u2705 Tests pass\xe9s avec succ\xe8s !"];if(E.stdout){let e=E.stdout.trim().split("\n");for(let a=0;a<e.length;a++)if(e[a]!=h[a][1]){C=`\u274c Erreur : ${h[a][0]} renvoie ${e[a]} au lieu de ${h[a][1]}`,N=0;break}-1===N&&(N=1)}return t.createElement("div",null,t.createElement("div",{className:"relative mb-10 flex flex-col"},t.createElement(l.default,{items:[{label:"Run",icon:c,onClick:function(){w.runPython(k),P(!0);const e=`${k.replace(/print\(.*\)/g,"")}\n`+h.map((e=>`print(${e[0]})`)).join("\n");console.log(e),E.runPython(e)},disabled:w.isLoading||w.isRunning,hidden:w.isRunning},{label:"Stop",icon:d,onClick:function(){w.interruptExecution(),P(!1)},hidden:!w.isRunning},{label:"Reset",icon:p,onClick:function(){P(!1),x(f.trimEnd())},disabled:w.isRunning}]}),t.createElement(i.default,{fallback:t.createElement("div",null,"Loading...")},(()=>{const e=n(4981).default;return n(4007),n(2777),n(3783),n(2679),t.createElement(e,{value:k,mode:"python",name:"CodeBlock",fontSize:"0.9rem",className:"min-h-[4rem] overflow-clip rounded shadow-md",theme:"dark"===v?"idle_fingers":"textmate",onChange:x,width:"100%",maxLines:1/0,onLoad:g,editorProps:{$blockScrolling:!0},setOptions:u})})),b&&t.createElement("pre",{className:"mt-4 text-left"},w.stdout,1===N&&t.createElement("code",{className:"text-green-500"},C),0===N&&t.createElement("code",{className:"text-red-500"},C),t.createElement("code",{className:"text-red-500"},w.stderr)),1===N&&t.createElement(s.default,{summary:"Solution",className:"bg-green-100 dark:bg-green-900"},t.createElement(m.default,{language:"python",showLineNumbers:!0},f))))}},8573:(e,a,n)=>{n.r(a),n.d(a,{default:()=>c});var t=n(7462),i=n(7294),o=n(2389),r=n(1170),s=n(5864),l=n(8072);function c(e){let{children:a,...n}=e;const c=(0,o.default)(),d=function(e){return i.Children.toArray(e).some((e=>(0,i.isValidElement)(e)))?e:Array.isArray(e)?e.join(""):e}(a);if("language-python"===n.className)return i.createElement(l.default,{code:d});{const e="string"==typeof d?s.default:r.default;return i.createElement(e,(0,t.default)({key:String(c)},n),d)}}},8234:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,micropipPackagesCode:()=>m,officialPackagesCode:()=>p,toc:()=>d});var t=n(7462),i=(n(7294),n(3905)),o=n(8072);const r={sidebar_position:4},s="Using Packages",l={unversionedId:"examples/using-packages",id:"examples/using-packages",title:"Using Packages",description:"Packages can be installed using the following Packages object and can be imported either globally through the provider, or per instance. For props, see the API reference docs.",source:"@site/docs/examples/using-packages.mdx",sourceDirName:"examples",slug:"/examples/using-packages",permalink:"/docs/examples/using-packages",draft:!1,editUrl:"https://github.com/apprendre-python/apprendre-python.github.io/docs/examples/using-packages.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4}},c={},d=[{value:"Python standard library",id:"python-standard-library",level:2},{value:"Pyodide official packages",id:"pyodide-official-packages",level:2},{value:"Installing packages with micropip",id:"installing-packages-with-micropip",level:2}],p="from asciitree import LeftAligned\nfrom collections import OrderedDict as OD\n\ntree = {\n    'asciitree': OD([\n        ('sometimes',\n            {'you': {}}),\n        ('just',\n            {'want': OD([\n                ('to', {}),\n                ('draw', {}),\n            ])}),\n        ('trees', {}),\n        ('in', {\n            'your': {\n                'browser': {}\n            }\n        })\n    ])\n}\n\ntr = LeftAligned()\nprint(tr(tree))\n",m='from cowsay import cowsay\n\nmessage = """\nThe most remarkable thing about my mother is that for thirty years she served\nthe family nothing but leftovers.  The original meal has never been found.\n\t\t-- Calvin Trillin\n""".strip()\nprint(cowsay(message))\n',u={toc:d,officialPackagesCode:p,micropipPackagesCode:m},g="wrapper";function h(e){let{components:a,...n}=e;return(0,i.mdx)(g,(0,t.default)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"using-packages"},"Using Packages"),(0,i.mdx)("p",null,"Packages can be installed using the following ",(0,i.mdx)("inlineCode",{parentName:"p"},"Packages")," object and can be imported either globally through the provider, or per instance. For props, see the ",(0,i.mdx)("a",{parentName:"p",href:"../introduction/api-reference"},"API reference docs"),"."),(0,i.mdx)("p",null,"Example importing packages globally:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-tsx"},"import { PythonProvider } from 'react-py'\n\nfunction App() {\n  const packages = {\n    official: ['asciitree'],\n    micropip: ['python-cowsay'],\n  }\n\n  return (\n    <PythonProvider packages={packages}>\n      <Codeblock />\n    </PythonProvider>\n  )\n}\n\n...\n")),(0,i.mdx)("p",null,"Example importing packages per instance:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-tsx"},"import { usePython } from 'react-py'\n\nconst packages = {\n  official: ['asciitree'],\n  micropip: ['python-cowsay'],\n}\n\nfunction Codeblock() {\n  const { runPython, ... } = usePython(packages)\n\n  ...\n}\n")),(0,i.mdx)("h2",{id:"python-standard-library"},"Python standard library"),(0,i.mdx)("p",null,"The Python standard library is available without needing to install any packages, ",(0,i.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/library"},"view the full list here"),"."),(0,i.mdx)("p",null,"Example using ",(0,i.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/library/uuid.html"},"uuid"),"."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-python"},"import uuid\n\nprint(uuid.uuid4())\n")),(0,i.mdx)("h2",{id:"pyodide-official-packages"},"Pyodide official packages"),(0,i.mdx)("p",null,"There is a list of official packages included with Pyodide, ",(0,i.mdx)("a",{parentName:"p",href:"https://pyodide.org/en/stable/usage/packages-in-pyodide.html"},"view the full list here"),"."),(0,i.mdx)("p",null,"Example using ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/mbr/asciitree"},"asciitree"),"."),(0,i.mdx)(o.default,{code:p,packages:{official:["asciitree"]},mdxType:"CodeEditor"}),(0,i.mdx)("h2",{id:"installing-packages-with-micropip"},"Installing packages with micropip"),(0,i.mdx)("p",null,"Micropip can be used to install pure Python packages with wheels available on PyPI ",(0,i.mdx)("a",{parentName:"p",href:"https://pyodide.org/en/stable/usage/loading-packages.html#installing-wheels-from-arbitrary-urls"},"or from other URLs"),"."),(0,i.mdx)("p",null,"Example using ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/James-Ansley/cowsay"},"python-cowsay"),"."),(0,i.mdx)(o.default,{code:m,packages:{micropip:["python-cowsay"]},mdxType:"CodeEditor"}))}h.isMDXComponent=!0}}]);